#! python3


import cv2
import numpy as np
import sys
# apparently the pop-up windows reformat if this module is incorporated
import pyautogui
import time
# from builtins import print
from Scripts import ImageProcessing as process
from Scripts import FrameExtraction as frame
from Scripts import GameControl as game
from Scripts.DirectKeys import ReleaseKey, PressKey, W, A, S, D
from Refs.MaskRoadStandard import ROAD_ROI_POLYGON_AS_array

"""
image = cv2.imread("./Images/lena.jpg")
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
cv2.imshow("Over the Clouds", image)
cv2.imshow("Over the Clouds - gray", gray_image)
# time.sleep(7)
cv2.waitKey(0)
cv2.destroyAllWindows()
"""

SCREEN_COOR_DIM = (10, 40, 800, 600)
ROAD_ROI_POLYGON = [ROAD_ROI_POLYGON_AS_array]


def main():
    print(sys.version)
    last_time = time.time()

    ## Give time to tab to the simulation
    game.WaitLoop()
    ## Make directX recognize command inGame
    PressKey(W)
    # game.WaitLoop()
    ## The key is released in game.
    # ReleaseKey(W)

    while True:
        printScreen_numpy = frame.getFrameFromSquare(SCREEN_COOR_DIM)
        # colorCorrectedImage = cv2.cvtColor(printScreen_numpy, cv2.COLOR_BGR2RGB)
        # canny_edges = process.ExtractCannyEdges(printScreen_numpy)
        canny_edges = process.SobelFilterX(printScreen_numpy, 3)
        edges_image = frame.MaskRoadROI(canny_edges, ROAD_ROI_POLYGON)
        edges_image = cv2.GaussianBlur()
        HoughLines = cv2.HoughLines(edges_image, 1, np.pi / 180, 180, 20,15)
        DrawLines(printScreen_numpy, HoughLines)

        print('Loop took: {} seconds'.format(time.time() - last_time))  # Debug info
        last_time = time.time()

        cv2.imshow('window', edges_image)
        if cv2.waitKey(25) & 0xFF == ord('q'):
            cv2.destroyAllWindows()
            break


main()
